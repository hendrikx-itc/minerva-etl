#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os
import sys
import argparse
import logging
from contextlib import closing

from psycopg2 import ProgrammingError

from minerva import __version__ as version
from minerva.instance import MinervaInstance


package_name = "minerva"
script_name = os.path.basename(__file__)


def main():
    parser = argparse.ArgumentParser(
        description="VACUUM FULL completed trend partitions")

    parser.add_argument(
        "--version", action="version", version=version,
        help="display version information and exit")

    parser.add_argument(
        "-i", "--instance",
        help="name of the target minerva instance")

    parser.add_argument("-u", "--user", help="user to connect to database")

    parser.add_argument(
        "-v", "--verbose", action="store_true", default=False,
        help="verbose output")

    args = parser.parse_args()

    logging.root.addHandler(logging.StreamHandler(sys.stdout))

    if args.verbose:
        logging.root.setLevel(logging.INFO)

    minerva_instance_name = (
        args.instance or
        os.environ.get("MINERVA_INSTANCE") or
        "default"
    )

    minerva_instance = MinervaInstance.load(minerva_instance_name)

    user = args.user or "minerva_admin"

    with closing(minerva_instance.connect(user=user)) as conn:
        conn._con.autocommit = True
        with closing(conn.cursor()) as cursor:
            cursor.execute('SELECT table_name FROM trend.to_be_vacuumed')

            for table_name, in cursor.fetchall():
                try:
                    cursor.execute(
                        'VACUUM FULL FREEZE trend."{}"'.format(table_name))
                except ProgrammingError:
                    # Partition has been dropped already
                    pass
                cursor.execute(
                    'DELETE FROM trend.to_be_vacuumed WHERE table_name = %s',
                    (table_name, ))
                logging.info('performed vacuum full on {}'.format(table_name))


if __name__ == "__main__":
    main()
